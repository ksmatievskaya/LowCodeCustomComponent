version: '3'

name: guru-data-mesh

services:
  graphql-mesh:
    image: hasura/graphql-engine:latest
    ports:
    - "8080:8080"
    depends_on:
    - "datacluster"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${HASURA_GRAPHQL_METADATA_DATABASE_URL}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: ${HASURA_GRAPHQL_DEV_MODE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  workflow:
    image: n8nio/n8n:latest
    ports:
      - 5678:5678
    environment:
      N8N_DIAGNOSTICS_ENABLED: false 
      N8N_VERSION_NOTIFICATIONS_ENABLED: false
    volumes:
      - wokflow-data:/home/node/.n8n
  nocodedb:
    image: nocodb/nocodb:latest
    environment: 
      NC_DB: ${NC_DB}
    ports: 
      - "18080:8080"
    restart: always
    volumes: 
      - ncdb-data:/usr/app/data
  datacluster:
    ## change to rebulder pg
    image: postgres:15
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    restart: always
    environment:
      TZ: "Europe/Moscow"
      PGTZ: "Europe/Moscow"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: superdba
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_DATABASES: "graphqlmetadata,superdba: nocodb,superdba: okrdb:superdba"
    volumes:
      - dbcluster-data:/var/lib/postgresql/data

  dba-admin:
    image: dpage/pgadmin4
    container_name: dbaadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: superdba@iczin.guru
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8889:80"
  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    volumes:
      - proxy-data:/data
      - proxy-letsencrypt-data:/etc/letsencrypt

volumes:
  proxy-data:
  proxy-letsencrypt-data:
  wokflow-data:
  dbcluster-data:  
  ncdb-data:
